<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bandex.apicenter.dao.UserSportRefMapper" >
  <resultMap id="BaseResultMap" type="com.bandex.apicenter.model.UserSportRef" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="event_id" property="eventId" jdbcType="BIGINT" />
    <result column="sport_id" property="sportId" jdbcType="BIGINT" />
    <result column="sport_name" property="sportName" jdbcType="VARCHAR" />
    <result column="sport_code" property="sportCode" jdbcType="VARCHAR" />
    <result column="sport_type" property="sportType" jdbcType="INTEGER" />
    <result column="sport_category" property="sportCategory" jdbcType="INTEGER" />
    <result column="sport_state" property="sportState" jdbcType="INTEGER" />
    <result column="sprot_start_time" property="sprotStartTime" jdbcType="TIMESTAMP" />
    <result column="sprot_end_time" property="sprotEndTime" jdbcType="TIMESTAMP" />
    <result column="sprot_hour" property="sprotHour" jdbcType="DOUBLE" />
    <result column="sport_distance" property="sportDistance" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, event_id, sport_id, sport_name, sport_code, sport_type, sport_category, 
    sport_state, sprot_start_time, sprot_end_time, sprot_hour, sport_distance, create_time, 
    modify_time, delete_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_sport_ref
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_sport_ref
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bandex.apicenter.model.UserSportRef" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_sport_ref (user_id, event_id, sport_id, 
      sport_name, sport_code, sport_type, 
      sport_category, sport_state, sprot_start_time, 
      sprot_end_time, sprot_hour, sport_distance, 
      create_time, modify_time, delete_flag
      )
    values (#{userId,jdbcType=BIGINT}, #{eventId,jdbcType=BIGINT}, #{sportId,jdbcType=BIGINT}, 
      #{sportName,jdbcType=VARCHAR}, #{sportCode,jdbcType=VARCHAR}, #{sportType,jdbcType=INTEGER}, 
      #{sportCategory,jdbcType=INTEGER}, #{sportState,jdbcType=INTEGER}, #{sprotStartTime,jdbcType=TIMESTAMP}, 
      #{sprotEndTime,jdbcType=TIMESTAMP}, #{sprotHour,jdbcType=DOUBLE}, #{sportDistance,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bandex.apicenter.model.UserSportRef" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_sport_ref
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="sportId != null" >
        sport_id,
      </if>
      <if test="sportName != null" >
        sport_name,
      </if>
      <if test="sportCode != null" >
        sport_code,
      </if>
      <if test="sportType != null" >
        sport_type,
      </if>
      <if test="sportCategory != null" >
        sport_category,
      </if>
      <if test="sportState != null" >
        sport_state,
      </if>
      <if test="sprotStartTime != null" >
        sprot_start_time,
      </if>
      <if test="sprotEndTime != null" >
        sprot_end_time,
      </if>
      <if test="sprotHour != null" >
        sprot_hour,
      </if>
      <if test="sportDistance != null" >
        sport_distance,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="eventId != null" >
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="sportId != null" >
        #{sportId,jdbcType=BIGINT},
      </if>
      <if test="sportName != null" >
        #{sportName,jdbcType=VARCHAR},
      </if>
      <if test="sportCode != null" >
        #{sportCode,jdbcType=VARCHAR},
      </if>
      <if test="sportType != null" >
        #{sportType,jdbcType=INTEGER},
      </if>
      <if test="sportCategory != null" >
        #{sportCategory,jdbcType=INTEGER},
      </if>
      <if test="sportState != null" >
        #{sportState,jdbcType=INTEGER},
      </if>
      <if test="sprotStartTime != null" >
        #{sprotStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sprotEndTime != null" >
        #{sprotEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sprotHour != null" >
        #{sprotHour,jdbcType=DOUBLE},
      </if>
      <if test="sportDistance != null" >
        #{sportDistance,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bandex.apicenter.model.UserSportRef" >
    update user_sport_ref
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="eventId != null" >
        event_id = #{eventId,jdbcType=BIGINT},
      </if>
      <if test="sportId != null" >
        sport_id = #{sportId,jdbcType=BIGINT},
      </if>
      <if test="sportName != null" >
        sport_name = #{sportName,jdbcType=VARCHAR},
      </if>
      <if test="sportCode != null" >
        sport_code = #{sportCode,jdbcType=VARCHAR},
      </if>
      <if test="sportType != null" >
        sport_type = #{sportType,jdbcType=INTEGER},
      </if>
      <if test="sportCategory != null" >
        sport_category = #{sportCategory,jdbcType=INTEGER},
      </if>
      <if test="sportState != null" >
        sport_state = #{sportState,jdbcType=INTEGER},
      </if>
      <if test="sprotStartTime != null" >
        sprot_start_time = #{sprotStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sprotEndTime != null" >
        sprot_end_time = #{sprotEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sprotHour != null" >
        sprot_hour = #{sprotHour,jdbcType=DOUBLE},
      </if>
      <if test="sportDistance != null" >
        sport_distance = #{sportDistance,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bandex.apicenter.model.UserSportRef" >
    update user_sport_ref
    set user_id = #{userId,jdbcType=BIGINT},
      event_id = #{eventId,jdbcType=BIGINT},
      sport_id = #{sportId,jdbcType=BIGINT},
      sport_name = #{sportName,jdbcType=VARCHAR},
      sport_code = #{sportCode,jdbcType=VARCHAR},
      sport_type = #{sportType,jdbcType=INTEGER},
      sport_category = #{sportCategory,jdbcType=INTEGER},
      sport_state = #{sportState,jdbcType=INTEGER},
      sprot_start_time = #{sprotStartTime,jdbcType=TIMESTAMP},
      sprot_end_time = #{sprotEndTime,jdbcType=TIMESTAMP},
      sprot_hour = #{sprotHour,jdbcType=DOUBLE},
      sport_distance = #{sportDistance,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>